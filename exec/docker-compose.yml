version: '3.8'

services:
  jenkins:
    build:
      dockerfile: ./jenkins.Dockerfile
    container_name: jenkins
    restart: unless-stopped
    volumes:
      - /home/ubuntu/jenkins-data:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 9090:8080
    privileged: true
    links:
      - h2

  mysql:
    image: mysql:8.3.0
    container_name: mysql
    restart: unless-stopped
    volumes:
      - /home/ubuntu/mysql/data:/var/lib/mysql
      # - /home/ubuntu/mysql/initdb.d:/docker-entrypoint-initdb.d
    ports:
      - 3306:3306
    environment:
      TZ: ${TZ}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    networks:
      - backend

  mysql-test:
    image: kkoma-mysql:latest
    container_name: mysql-test
    restart: unless-stopped
    volumes:
      - /home/ubuntu/mysql-test/data:/var/lib/mysql
      # - /home/ubuntu/mysql/initdb.d:/docker-entrypoint-initdb.d
    ports:
      - 4406:3306
    environment:
      TZ: ${TZ}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    networks:
      - backend

  redis:
    image: redis:7.2-alpine
    container_name: redis
    volumes:
      - /home/ubuntu/redis/data:/data
    restart: always
    ports:
      - 6379:6379
    networks:
      - backend

  api:
    image: loverduck97/kkoma-backend:latest
    container_name: api
    restart: always
    env_file:
      - .env
    ports:
      - 4000:8080
    networks:
      - backend
      - frontend
    depends_on:
      - h2

  app:
    image: loverduck97/kkoma-frontend:latest
    container_name: app
    restart: always
    env_file:
      - .env
    ports:
      - 3000:3000
    networks:
      - frontend

  h2:
    container_name: h2
    image: oscarfonts/h2:latest
    ports:
      - 1521:1521
      - 8081:81
    environment:
      H2_OPTIONS: -ifNotExists
    volumes:
      - /home/ubuntu/h2:/opt/h2-data
    restart: always
    networks:
      - backend

networks:
  backend:
  frontend:
